{"ast":null,"code":"import _slicedToArray from\"D:/Coding/React Full/textutils/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import'./App.css';// import About from './components/About';\nimport Navbar from'./components/Navbar';import TextArea from'./components/TextArea';import Alert from'./components/Alert';// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(\"light\"),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setmode=_useState2[1];var _useState3=useState(\"light\"),_useState4=_slicedToArray(_useState3,2),greenMode=_useState4[0],setGreenMode=_useState4[1];var _useState5=useState(\"light\"),_useState6=_slicedToArray(_useState5,2),modeGreen=_useState6[0],setModeGreen=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),alert=_useState8[0],setAlert=_useState8[1];var showAlert=function showAlert(message,type){setAlert({msg:message,type:type});setTimeout(function(){showAlert(null);},3000);};var toggleMode=function toggleMode(){if(mode===\"light\"){console.log(\"dark\");setmode(\"dark\");document.body.style.backgroundColor=\"#121e6de0\";showAlert(\" Dark Mode Enabled\",\"success\");document.title=\"Text utils-Dark mode\";}else{console.log(\"light\");setmode(\"light\");document.body.style.backgroundColor=\"white\";showAlert(\" Light Mode Enabled\",\"warning\");document.title=\"Text utils-light mode\";}};var toggleGreenMode=function toggleGreenMode(){if(greenMode===\"light\"){setGreenMode('green');setModeGreen(\"green\");document.body.style.backgroundColor=\"green\";showAlert(\" Green Dark Mode Enabled\",\"success\");document.title=\"Text Utils - Green dark mode\";}else{setGreenMode('light');setModeGreen(\"black\");document.body.style.backgroundColor=\"white\";showAlert(\" Light Mode Enabled\",\"success\");document.title=\"Text utils-light mode\";}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"TextUtils\",about:\"About\",mode:mode,modeGreen:modeGreen,toggleMode:toggleMode,toggleGreenMode:toggleGreenMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsx(TextArea,{showAlert:showAlert,heading:\"To Upper Case Converter\",mode:mode})})]});}export default App;","map":{"version":3,"names":["useState","Navbar","TextArea","Alert","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","mode","setmode","_useState3","_useState4","greenMode","setGreenMode","_useState5","_useState6","modeGreen","setModeGreen","_useState7","_useState8","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","console","log","document","body","style","backgroundColor","title","toggleGreenMode","children","about","className","heading"],"sources":["D:/Coding/React Full/textutils/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextArea from './components/TextArea';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\")\n  const [greenMode, setGreenMode] = useState(\"light\")\n  const [modeGreen, setModeGreen] = useState(\"light\")\n  const [alert, setAlert] = useState(null)\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      showAlert(null)\n    }, 3000);\n  }\n\n  const toggleMode=()=>{\n  if (mode===\"light\") {\n    console.log(\"dark\")\n    setmode(\"dark\") \n    document.body.style.backgroundColor =\"#121e6de0\"\n    showAlert(\" Dark Mode Enabled\",\"success\")\n    document.title=\"Text utils-Dark mode\"\n  }\n  else{\n    console.log(\"light\")\n    setmode(\"light\")\n    document.body.style.backgroundColor = \"white\"\n    showAlert(\" Light Mode Enabled\", \"warning\")\n    document.title = \"Text utils-light mode\"\n  }\n}\n  const toggleGreenMode = () => {\n    if (greenMode === \"light\") {\n      setGreenMode('green')\n      setModeGreen(\"green\")\n      document.body.style.backgroundColor = \"green\"\n      showAlert(\" Green Dark Mode Enabled\", \"success\")\n      document.title= \"Text Utils - Green dark mode\"\n    }\n    else {\n      setGreenMode('light')\n      setModeGreen(\"black\")\n      document.body.style.backgroundColor = \"white\"\n      showAlert(\" Light Mode Enabled\", \"success\")\n      document.title = \"Text utils-light mode\"\n    }\n  }\nreturn (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" about=\"About\" mode={mode} modeGreen={modeGreen} toggleMode={toggleMode} toggleGreenMode={toggleGreenMode} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n\n      {/* <Routes> */}\n          <TextArea showAlert={showAlert} heading=\"To Upper Case Converter\" mode={mode} />   \n          {/* <Route path=\"/About\" element={<About />} /> */}\n      {/* </Routes> */}\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}