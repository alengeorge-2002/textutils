{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\React Full\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextArea from './components/TextArea';\nimport Alert from './components/Alert';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setmode] = useState(\"light\");\n  const [greenMode, setGreenMode] = useState(\"light\");\n  const [modeGreen, setModeGreen] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      showAlert(null);\n    }, 3000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      console.log(\"dark\");\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#121e6de0\";\n      showAlert(\" Dark Mode Enabled\", \"success\");\n      document.title = \"Text utils-Dark mode\";\n    } else {\n      console.log(\"light\");\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\" Light Mode Enabled\", \"warning\");\n      document.title = \"Text utils-light mode\";\n    }\n  };\n  const toggleGreenMode = () => {\n    if (greenMode === \"light\") {\n      setGreenMode('green');\n      setModeGreen(\"green\");\n      document.body.style.backgroundColor = \"green\";\n      showAlert(\" Green Dark Mode Enabled\", \"success\");\n      document.title = \"Text Utils - Green dark mode\";\n    } else {\n      setGreenMode('light');\n      setModeGreen(\"black\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\" Light Mode Enabled\", \"success\");\n      document.title = \"Text utils-light mode\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"r\", /*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      about: \"About\",\n      mode: mode,\n      modeGreen: modeGreen,\n      toggleMode: toggleMode,\n      toggleGreenMode: toggleGreenMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users\",\n        children: /*#__PURE__*/_jsxDEV(Users, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n      showAlert: showAlert,\n      heading: \"To Upper Case Converter\",\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"eFYeh94FoIkGngUQV6QuvLv8pS8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","About","Navbar","TextArea","Alert","BrowserRouter","Router","Switch","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setmode","greenMode","setGreenMode","modeGreen","setModeGreen","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","console","log","document","body","style","backgroundColor","title","toggleGreenMode","children","about","fileName","_jsxFileName","lineNumber","columnNumber","path","Users","Home","heading","_c","$RefreshReg$"],"sources":["D:/Coding/React Full/textutils/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextArea from './components/TextArea';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\")\n  const [greenMode, setGreenMode] = useState(\"light\")\n  const [modeGreen, setModeGreen] = useState(\"light\")\n  const [alert, setAlert] = useState(null)\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      showAlert(null)\n    }, 3000);\n  }\n\n  const toggleMode=()=>{\n  if (mode===\"light\") {\n    console.log(\"dark\")\n    setmode(\"dark\") \n    document.body.style.backgroundColor =\"#121e6de0\"\n    showAlert(\" Dark Mode Enabled\",\"success\")\n    document.title=\"Text utils-Dark mode\"\n  }\n  else{\n    console.log(\"light\")\n    setmode(\"light\")\n    document.body.style.backgroundColor = \"white\"\n    showAlert(\" Light Mode Enabled\", \"warning\")\n    document.title = \"Text utils-light mode\"\n  }\n}\n  const toggleGreenMode = () => {\n    if (greenMode === \"light\") {\n      setGreenMode('green')\n      setModeGreen(\"green\")\n      document.body.style.backgroundColor = \"green\"\n      showAlert(\" Green Dark Mode Enabled\", \"success\")\n      document.title= \"Text Utils - Green dark mode\"\n    }\n    else {\n      setGreenMode('light')\n      setModeGreen(\"black\")\n      document.body.style.backgroundColor = \"white\"\n      showAlert(\" Light Mode Enabled\", \"success\")\n      document.title = \"Text utils-light mode\"\n    }\n  }\nreturn (\n    <>\n    r\n    <Navbar title=\"TextUtils\" about=\"About\" mode={mode} modeGreen={modeGreen} toggleMode={toggleMode} toggleGreenMode={toggleGreenMode} />\n      <Alert alert={alert}/>\n    <Switch>\n      <Route path=\"/about\">\n        <About />\n      </Route>\n      <Route path=\"/users\">\n        <Users />\n      </Route>\n      <Route path=\"/\">\n        <Home />\n      </Route>\n    </Switch>\n      <TextArea showAlert={showAlert} heading=\"To Upper Case Converter\" mode={mode} />\n      <About/>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}