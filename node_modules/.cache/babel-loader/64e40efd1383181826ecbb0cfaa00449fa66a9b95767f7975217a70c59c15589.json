{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\React Full\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextArea from './components/TextArea';\nimport Alert from './components/Alert';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setmode] = useState(\"light\");\n  const [greenMode, setGreenMode] = useState(\"light\");\n  const [modeGreen, setModeGreen] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      showAlert(null);\n    }, 3000);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#121e6de0\";\n      showAlert(\"Dark Mode Enabled\", \"success\");\n      document.title = \"Text utils - Dark mode\";\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled\", \"warning\");\n      document.title = \"Text utils - Light mode\";\n    }\n  };\n  const toggleGreenMode = () => {\n    if (greenMode === \"light\") {\n      setGreenMode('green');\n      setModeGreen(\"green\");\n      document.body.style.backgroundColor = \"green\";\n      showAlert(\"Green Dark Mode Enabled\", \"success\");\n      document.title = \"Text Utils - Green dark mode\";\n    } else {\n      setGreenMode('light');\n      setModeGreen(\"black\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled\", \"success\");\n      document.title = \"Text utils - Light mode\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtils\",\n        about: \"About\",\n        mode: mode,\n        modeGreen: modeGreen,\n        toggleMode: toggleMode,\n        toggleGreenMode: toggleGreenMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(TextArea, {\n            showAlert: showAlert,\n            heading: \"To Upper Case Converter\",\n            mode: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"eFYeh94FoIkGngUQV6QuvLv8pS8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","About","Navbar","TextArea","Alert","BrowserRouter","Router","Route","Switch","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setmode","greenMode","setGreenMode","modeGreen","setModeGreen","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title","toggleGreenMode","children","about","fileName","_jsxFileName","lineNumber","columnNumber","path","heading","_c","$RefreshReg$"],"sources":["D:/Coding/React Full/textutils/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextArea from './components/TextArea';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\");\n  const [greenMode, setGreenMode] = useState(\"light\");\n  const [modeGreen, setModeGreen] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      showAlert(null);\n    }, 3000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#121e6de0\";\n      showAlert(\"Dark Mode Enabled\", \"success\");\n      document.title = \"Text utils - Dark mode\";\n    } else {\n      setmode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled\", \"warning\");\n      document.title = \"Text utils - Light mode\";\n    }\n  };\n\n  const toggleGreenMode = () => {\n    if (greenMode === \"light\") {\n      setGreenMode('green');\n      setModeGreen(\"green\");\n      document.body.style.backgroundColor = \"green\";\n      showAlert(\"Green Dark Mode Enabled\", \"success\");\n      document.title = \"Text Utils - Green dark mode\";\n    } else {\n      setGreenMode('light');\n      setModeGreen(\"black\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled\", \"success\");\n      document.title = \"Text utils - Light mode\";\n    }\n  };\n\n  return (\n    <>\n      <Router>\n        <Navbar title=\"TextUtils\" about=\"About\" mode={mode} modeGreen={modeGreen} toggleMode={toggleMode} toggleGreenMode={toggleGreenMode} />\n        <Alert alert={alert} />\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n            <TextArea showAlert={showAlert} heading=\"To Upper Case Converter\" mode={mode} />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}