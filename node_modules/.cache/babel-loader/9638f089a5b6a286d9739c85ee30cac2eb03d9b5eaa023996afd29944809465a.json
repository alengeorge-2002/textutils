{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding\\\\React Full\\\\textutils\\\\src\\\\components\\\\TextArea.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextArea(props) {\n  _s();\n  const convertToUpper = () => {\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Converted to upper case\", \"success\");\n  };\n  const convertToLower = () => {\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Converted to Lower case\", \"info\");\n  };\n  const handleClearText = () => {\n    let newText = \"\";\n    setText(newText);\n    props.showAlert(\" Text cleared\", \"danger\");\n  };\n  const extractName = () => {\n    const parts = text.split(\"@\");\n    if (parts.length === 2) {\n      setNewEmailName(parts[0]);\n    } else {\n      setNewEmailName(\"\");\n    }\n    props.showAlert(\" Converted to upper case\", \"success\");\n  };\n  const copyText = () => {\n    let copiedText = document.getElementById(\"my-textbox\");\n    copiedText.select();\n    document.execCommand(\"copy\");\n    props.showAlert(\" Copied successfully\", \"success\");\n  };\n  const editText = event => {\n    console.log(\"Changed\");\n    setText(event.target.value);\n  };\n  const [text, setText] = useState(\"\");\n  const [newEmailName, setNewEmailName] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        color: props.mode === \"dark\" ? \"white\" : \"black\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          style: {\n            backgroundColor: props.mode === \"dark\" ? \"#121e6de0\" : \"white\",\n            color: props.mode === \"dark\" ? \"white\" : \"black\"\n          },\n          id: \"my-textbox\",\n          value: text,\n          cols: \"30\",\n          rows: \"10\",\n          onChange: editText,\n          placeholder: \"Enter your text here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: convertToUpper,\n        children: \"To UpperCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-4\",\n        onClick: convertToLower,\n        children: \"To LowerCase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-4\",\n        onClick: extractName,\n        children: \"Extract Email name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-4\",\n        onClick: copyText,\n        children: \"Copy Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-4\",\n        onClick: handleClearText,\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-4\",\n      style: {\n        color: props.mode === 'dark' ? 'white' : 'black'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Counting Area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your text contains \", text.length, \" charectors and \", text.split(\" \").length, \" Words\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"The user name extracted from the email is \", newEmailName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(TextArea, \"s9pOXbf4epRsrb8HoHokGKoHpkY=\");\n_c = TextArea;\nvar _c;\n$RefreshReg$(_c, \"TextArea\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TextArea","props","_s","convertToUpper","newText","text","toUpperCase","setText","showAlert","convertToLower","toLowerCase","handleClearText","extractName","parts","split","length","setNewEmailName","copyText","copiedText","document","getElementById","select","execCommand","editText","event","console","log","target","value","newEmailName","children","className","style","color","mode","heading","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","id","cols","rows","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/Coding/React Full/textutils/src/components/TextArea.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default function TextArea(props) {\r\n    const convertToUpper=()=>{\r\n        let newText=text.toUpperCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to upper case\", \"success\")\r\n    }\r\n    const convertToLower=()=>{\r\n        let newText=text.toLowerCase()\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lower case\", \"info\")\r\n    }\r\n    const handleClearText =()=>{\r\n        let newText=\"\"\r\n        setText(newText)\r\n        props.showAlert(\" Text cleared\", \"danger\")\r\n    }\r\n    const extractName =()=>{\r\n       const parts=text.split(\"@\")\r\n       if (parts.length===2) {\r\n        setNewEmailName(parts[0])\r\n       }\r\n       else{\r\n        setNewEmailName(\"\")\r\n       }\r\n        props.showAlert(\" Converted to upper case\", \"success\")\r\n       \r\n    }\r\n    const copyText=()=>{\r\n        let copiedText = document.getElementById(\"my-textbox\")\r\n        copiedText.select()\r\n        document.execCommand(\"copy\")\r\n        props.showAlert(\" Copied successfully\", \"success\")\r\n        \r\n    }\r\n    \r\n    const editText=(event)=>{\r\n        console.log(\"Changed\")\r\n        setText(event.target.value)\r\n    }\r\n    const[text,setText]=useState(\"\")\r\n    const [newEmailName, setNewEmailName] = useState(\"\"); \r\n    \r\n    return (\r\n    <>\r\n            <div className='container' style={{ color: props.mode === \"dark\" ? \"white\" : \"black\"}} > \r\n            <h1>{props.heading}</h1>\r\n                    <div className=\"mb-3\">\r\n                    <textarea className='form-control' style={{backgroundColor: props.mode === \"dark\" ? \"#121e6de0\" : \"white\", color: props.mode ===\"dark\" ? \"white\" : \"black\" }} id=\"my-textbox\" value={text} cols=\"30\" rows=\"10\" onChange={editText} placeholder='Enter your text here'></textarea>\r\n                    </div>\r\n                    <button className=\"btn btn-primary\" onClick={convertToUpper}>To UpperCase</button>\r\n                    <button className=\"btn btn-primary mx-4\" onClick={convertToLower}>To LowerCase</button>\r\n                    <button className=\"btn btn-primary mx-4\" onClick={extractName}>Extract Email name</button>\r\n                    <button className=\"btn btn-primary mx-4\" onClick={copyText}>Copy Text</button>\r\n                    <button className=\"btn btn-primary mx-4\" onClick={handleClearText}>Clear Text</button>\r\n        </div>\r\n            <div className=\"container my-4\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n            <h2>Counting Area</h2>\r\n            <br />\r\n            <p>Your text contains {text.length} charectors and {text.split(\" \").length} Words</p>\r\n\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n            <h2>The user name extracted from the email is {newEmailName}</h2>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}